"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  cookie: () => cookie,
  getCookies: () => getCookies,
  getHeaders: () => getHeaders,
  header: () => header
});
module.exports = __toCommonJS(src_exports);

// src/headers.ts
var import_headers = require("next/headers");
function createHeaderHelpers(headers = import_headers.headers) {
  const header2 = async (...args) => {
    const headerStrore = await headers();
    return headerStrore.get(...args);
  };
  const getHeaders2 = async () => headers();
  return { header: header2, getHeaders: getHeaders2 };
}
var { header, getHeaders } = createHeaderHelpers();

// src/cookies.ts
var import_headers2 = require("next/headers");
function createCookieHelpers(cookies = import_headers2.cookies) {
  async function cookie2(...args) {
    const [nameOrCookie, value, opts] = args;
    const name = typeof nameOrCookie === "string" ? nameOrCookie : nameOrCookie.name;
    const cookieStore = await cookies();
    if (name && args.length >= 2) {
      return cookieStore.set(name, value, opts);
    }
    return cookieStore.get(name);
  }
  const getCookies2 = async () => cookies();
  return { cookie: cookie2, getCookies: getCookies2 };
}
var { cookie, getCookies } = createCookieHelpers();
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  cookie,
  getCookies,
  getHeaders,
  header
});
