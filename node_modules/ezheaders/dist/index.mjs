// src/headers.ts
import { headers as _headers } from "next/headers";
function createHeaderHelpers(headers = _headers) {
  const header2 = async (...args) => {
    const headerStrore = await headers();
    return headerStrore.get(...args);
  };
  const getHeaders2 = async () => headers();
  return { header: header2, getHeaders: getHeaders2 };
}
var { header, getHeaders } = createHeaderHelpers();

// src/cookies.ts
import { cookies as _cookies } from "next/headers";
function createCookieHelpers(cookies = _cookies) {
  async function cookie2(...args) {
    const [nameOrCookie, value, opts] = args;
    const name = typeof nameOrCookie === "string" ? nameOrCookie : nameOrCookie.name;
    const cookieStore = await cookies();
    if (name && args.length >= 2) {
      return cookieStore.set(name, value, opts);
    }
    return cookieStore.get(name);
  }
  const getCookies2 = async () => cookies();
  return { cookie: cookie2, getCookies: getCookies2 };
}
var { cookie, getCookies } = createCookieHelpers();
export {
  cookie,
  getCookies,
  getHeaders,
  header
};
